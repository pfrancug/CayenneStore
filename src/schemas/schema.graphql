input CultivarScoville_scaleQueryInput {
  to: Int
  to_ne: Int
  AND: [CultivarScoville_scaleQueryInput!]
  to_nin: [Int]
  to_in: [Int]
  OR: [CultivarScoville_scaleQueryInput!]
  from_exists: Boolean
  from: Int
  to_gt: Int
  from_gt: Int
  from_lt: Int
  from_in: [Int]
  to_gte: Int
  to_lt: Int
  from_lte: Int
  to_exists: Boolean
  to_lte: Int
  from_nin: [Int]
  from_ne: Int
  from_gte: Int
}

input CultivarScoville_scaleInsertInput {
  from: Int
  to: Int
}

input SeedCultivarRelationInput {
  create: CultivarInsertInput
  link: String
}

input CultivarUpdateInput {
  _id: ObjectId
  scoville_scale_unset: Boolean
  origin: String
  species: String
  origin_unset: Boolean
  creation_date_unset: Boolean
  last_update_date: DateTime
  scoville_scale: CultivarScoville_scaleUpdateInput
  user: String
  last_update_date_unset: Boolean
  _id_unset: Boolean
  species_unset: Boolean
  creation_date: DateTime
  cultivar: String
  cultivar_unset: Boolean
  user_unset: Boolean
}

type Query {
  cultivar(query: CultivarQueryInput): Cultivar
  cultivars(query: CultivarQueryInput, limit: Int = 100, sortBy: CultivarSortByInput): [Cultivar]!
  seed(query: SeedQueryInput): Seed
  seeds(query: SeedQueryInput, limit: Int = 100, sortBy: SeedSortByInput): [Seed]!
}

type Cultivar {
  _id: ObjectId
  creation_date: DateTime
  cultivar: String
  last_update_date: DateTime
  origin: String
  scoville_scale: CultivarScoville_scale
  species: String
  user: String
}

enum CultivarSortByInput {
  LAST_UPDATE_DATE_DESC
  USER_ASC
  _ID_ASC
  CULTIVAR_ASC
  ORIGIN_ASC
  ORIGIN_DESC
  SPECIES_ASC
  _ID_DESC
  CULTIVAR_DESC
  SPECIES_DESC
  USER_DESC
  CREATION_DATE_ASC
  CREATION_DATE_DESC
  LAST_UPDATE_DATE_ASC
}

enum SeedSortByInput {
  CULTIVAR_ASC
  ID_ASC
  ID_DESC
  SOURCE_ASC
  SOURCE_DESC
  _ID_DESC
  DATE_ASC
  DETAILS_DESC
  _ID_ASC
  CULTIVAR_DESC
  DETAILS_ASC
  PARENT_ASC
  PARENT_DESC
  DATE_DESC
}

input SeedInsertInput {
  date: DateTime
  details: String
  id: Int
  parent: Int
  source: String
  _id: ObjectId
  cultivar: SeedCultivarRelationInput
}

type InsertManyPayload {
  insertedIds: [ObjectId]!
}

scalar DateTime

type Mutation {
  deleteManyCultivars(query: CultivarQueryInput): DeleteManyPayload
  deleteManySeeds(query: SeedQueryInput): DeleteManyPayload
  deleteOneCultivar(query: CultivarQueryInput!): Cultivar
  deleteOneSeed(query: SeedQueryInput!): Seed
  insertManyCultivars(data: [CultivarInsertInput!]!): InsertManyPayload
  insertManySeeds(data: [SeedInsertInput!]!): InsertManyPayload
  insertOneCultivar(data: CultivarInsertInput!): Cultivar
  insertOneSeed(data: SeedInsertInput!): Seed
  replaceOneCultivar(query: CultivarQueryInput, data: CultivarInsertInput!): Cultivar
  replaceOneSeed(query: SeedQueryInput, data: SeedInsertInput!): Seed
  updateManyCultivars(query: CultivarQueryInput, set: CultivarUpdateInput!): UpdateManyPayload
  updateManySeeds(query: SeedQueryInput, set: SeedUpdateInput!): UpdateManyPayload
  updateOneCultivar(query: CultivarQueryInput, set: CultivarUpdateInput!): Cultivar
  updateOneSeed(query: SeedQueryInput, set: SeedUpdateInput!): Seed
  upsertOneCultivar(query: CultivarQueryInput, data: CultivarInsertInput!): Cultivar
  upsertOneSeed(query: SeedQueryInput, data: SeedInsertInput!): Seed
}

type UpdateManyPayload {
  matchedCount: Int!
  modifiedCount: Int!
}

type DeleteManyPayload {
  deletedCount: Int!
}

input CultivarQueryInput {
  last_update_date_exists: Boolean
  origin_gte: String
  _id_gt: ObjectId
  user_gte: String
  _id_exists: Boolean
  origin_exists: Boolean
  creation_date_gt: DateTime
  AND: [CultivarQueryInput!]
  cultivar_gte: String
  cultivar: String
  user_lte: String
  creation_date_gte: DateTime
  user_lt: String
  last_update_date_gt: DateTime
  user_exists: Boolean
  OR: [CultivarQueryInput!]
  creation_date_lt: DateTime
  _id: ObjectId
  _id_ne: ObjectId
  origin_nin: [String]
  species: String
  cultivar_lt: String
  last_update_date_lte: DateTime
  cultivar_lte: String
  species_gt: String
  _id_in: [ObjectId]
  user: String
  origin_in: [String]
  creation_date_exists: Boolean
  _id_gte: ObjectId
  user_gt: String
  species_exists: Boolean
  _id_lte: ObjectId
  cultivar_gt: String
  last_update_date: DateTime
  last_update_date_nin: [DateTime]
  scoville_scale_exists: Boolean
  species_lt: String
  creation_date_in: [DateTime]
  cultivar_ne: String
  origin_gt: String
  _id_lt: ObjectId
  creation_date_lte: DateTime
  cultivar_exists: Boolean
  scoville_scale: CultivarScoville_scaleQueryInput
  last_update_date_lt: DateTime
  creation_date_ne: DateTime
  creation_date_nin: [DateTime]
  last_update_date_gte: DateTime
  last_update_date_in: [DateTime]
  origin_lte: String
  user_in: [String]
  origin_ne: String
  species_nin: [String]
  user_nin: [String]
  user_ne: String
  cultivar_nin: [String]
  cultivar_in: [String]
  last_update_date_ne: DateTime
  species_lte: String
  _id_nin: [ObjectId]
  species_in: [String]
  origin: String
  creation_date: DateTime
  origin_lt: String
  species_gte: String
  species_ne: String
}

type CultivarScoville_scale {
  from: Int
  to: Int
}

type Seed {
  _id: ObjectId
  cultivar: Cultivar
  date: DateTime
  details: String
  id: Int
  parent: Int
  source: String
}

input CultivarScoville_scaleUpdateInput {
  to: Int
  to_inc: Int
  to_unset: Boolean
  from: Int
  from_inc: Int
  from_unset: Boolean
}

scalar ObjectId

input CultivarInsertInput {
  creation_date: DateTime
  cultivar: String
  last_update_date: DateTime
  origin: String
  scoville_scale: CultivarScoville_scaleInsertInput
  species: String
  user: String
  _id: ObjectId
}

input SeedUpdateInput {
  details_unset: Boolean
  id_unset: Boolean
  date_unset: Boolean
  source_unset: Boolean
  details: String
  date: DateTime
  id: Int
  _id: ObjectId
  id_inc: Int
  cultivar_unset: Boolean
  cultivar: SeedCultivarRelationInput
  _id_unset: Boolean
  parent: Int
  source: String
  parent_inc: Int
  parent_unset: Boolean
}

input SeedQueryInput {
  OR: [SeedQueryInput!]
  details_ne: String
  id_gte: Int
  AND: [SeedQueryInput!]
  details_in: [String]
  source_ne: String
  _id_gte: ObjectId
  _id_lt: ObjectId
  parent_lte: Int
  _id_lte: ObjectId
  date_in: [DateTime]
  _id: ObjectId
  source: String
  parent_gte: Int
  parent: Int
  id_gt: Int
  details_lt: String
  source_in: [String]
  source_exists: Boolean
  _id_exists: Boolean
  parent_lt: Int
  parent_ne: Int
  parent_gt: Int
  parent_exists: Boolean
  parent_nin: [Int]
  cultivar: CultivarQueryInput
  id_ne: Int
  source_gte: String
  date_lt: DateTime
  source_lte: String
  source_gt: String
  details: String
  id: Int
  details_gt: String
  _id_nin: [ObjectId]
  id_in: [Int]
  _id_in: [ObjectId]
  cultivar_exists: Boolean
  date_gte: DateTime
  details_nin: [String]
  date_ne: DateTime
  date_lte: DateTime
  parent_in: [Int]
  details_gte: String
  details_lte: String
  _id_ne: ObjectId
  id_lt: Int
  details_exists: Boolean
  date_gt: DateTime
  source_nin: [String]
  source_lt: String
  date_exists: Boolean
  id_exists: Boolean
  id_lte: Int
  id_nin: [Int]
  date: DateTime
  date_nin: [DateTime]
  _id_gt: ObjectId
}